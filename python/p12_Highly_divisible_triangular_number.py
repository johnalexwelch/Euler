'''
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''
def multiple(x):
	''' Finds the number of multiples of a number'''
	count = 0
	for i in range(1,x):
		if x%i == 0 :
			#print i
			count +=1	
	return count + 1

#print multiple(6)

def triangle_num(n_list):
	total = 0
	x = len(n_list) + 1
	for i in range(1,x):
		total +=1
	
	n_list.append(total)
	
	print n_list

n_list = [1,3]
print triangle_num(n_list)

def main():
	''' Creates the list of triangle numbers'''
	if multiple(x) == 5:
		return True
	else:
		total = 0
		for i in range(1,x):
			#print i
			total += i
		t = total + x
		print x

		#print x
		#print total

#print main()