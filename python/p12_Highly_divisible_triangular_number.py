'''
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''

def triangle(x):
	sum_terms = 0
	
	# Gets the sum of terms
	for i in range(0,x+1):
		sum_terms += i
	
	return sum_terms
		
def multiples(x):
	divisor_count = 0
	# Determines if its a multiple
	for j in range(1,x+1):
		if x%j == 0:
			divisor_count +=1
	
	return divisor_count

def list_triangle():
	diff = 2
	new =1 
	while (multiples(triangle(new))-1) < 500:
		new +=diff
		diff +=1
		print new
		
	return True

print list_triangle()
